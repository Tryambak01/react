#start of course

props and hooks.
reusability components.

Additional :
Redux, Redux toolkit, context API etc used for state management.
Appwrite , backend as a service.

After react : Contribute to open source project freeAPI.API 

To make a git repository , refer crete new peoject video from hitesh choudary react course.
Once you make a repo , you need to intialise git , make a commit , change branch , then make a remote origin and push to that origin.

Theres two ways to create react-app , 
1) npx create-react-app appname , this takes a lot of time.
2) npm create vite@latest  , (vite is a bundler) (also you have to install each thing from here , to do that do npm i)

package.json file is the heart of the project , here you can check all the dependencies installed in the project.
To run the application you need to invoke scripts from package.json

To run cra : npm run start
To run vite : npm run dev

In cra , react scripts are present in dependencies and are excecuted when npm start takes place. html does not have <script> tag.
In vite , a <script> tag is present inside html where react is passed into html.

NOTE: cmd + shift + p to reload and remove import errors.

Javascript :
    createElement to create an element.
    innerHTML to add text.
    setAttribute(name, value) to change features for ex : href and target.
    appendChild()

React is all about designing and creating components and using them to create a web page.

JSX makes it possible for us to write html inside of react.

How does React.createElement work ?
    const element = createElement(type, props, ...children)
     it acepts paraeters in the order typeOfElement , Attributes , Children
     const atestElement2 = React.createElement (
        'a',
        {href : "https://www.google.com", target : "_blank"},
        'Clicke here lol'
    )
    type must be in string , attributes must be in {a:b}

if you are creating an element out of scratch as objects, and there is no need to extract anything out of an element tag , then
you do not have to use capital letters to call your function in ViteReact.
if you are returning an html element , then the things inside the html tag needs to be extracted hence , the function must begin 
with a capital letter.

Conclusion : basically all the html tags are converted into objects by React (refer React.createElement)

What is react State ?
    In react there is something known as state , and this state is being constantly monitered , whenever there is a change 
    in the state , the component is re-rendered.

    useState is a hook , which returns an array containing [variable (in that state), function to modify variable]
    useState(15) , here i have initialsed the variable inside the useState to 15.

    In React, the useState hook returns an array with two elements. The first element is the current state value,
    and the second element is a function that allows you to update the state

    setCounter in react accepts one argument , where in you can update the current state to a new state either
    directly or theough a function

Variable injection in react : Declare variables inside a function and use {varName} inside the div 

Arrow functions in javascript :
    function () {}
    is eqvivalent to
    () => {}

    function (arg1, arg2) {return a*b}
    is eqvivalent to 
    (arg1, arg2) => {return a*b}

    also in javascript we can directly assign functions to our variables.
    ex: let multiply = (a, b) => a * b
    signifies (a,b) are the arguments for the function which returns a times b.

JavaScript is damn cool lmao.
Note that in JS if an empty {} is used , then it is an empty object

